generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  userId    String?  @unique
  name      String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  diaries   Diary[]

  @@index([userId])
  @@map("users")
}

model Diary {
  id        String   @id @default(cuid())
  userId    String
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  Photo     Photo[]

  @@index([userId])
  @@map("diaries")
}

model Photo {
  id        String   @id @default(cuid())
  diaryId   String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  diary     Diary    @relation(fields: [diaryId], references: [id])

  @@index([diaryId])
  @@map("photos")
}

model Weather {
  id            String          @id @default(cuid())
  date          String         // YYYYMMDD 형식
  locationX     Int            // 예보지점 X 좌표
  locationY     Int            // 예보지점 Y 좌표
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  hourlyWeather HourlyWeather[]

  @@unique([date, locationX, locationY])
  @@index([date])
  @@map("weather")
}

model HourlyWeather {
  id             String   @id @default(cuid())
  weatherId      String
  time           String   // HHMM 형식
  temperature    String
  precipitation  String
  weatherState   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  weather        Weather  @relation(fields: [weatherId], references: [id])

  @@unique([weatherId, time])
  @@index([weatherId])
  @@map("hourly_weather")
}
